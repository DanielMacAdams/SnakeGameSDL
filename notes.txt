How the game should work:

game rules:
1. the snake should be able to follow its own tail with no space in between
2. quit the game if the head collides with any other part of the snake
3. when the snake eats an apple, the background should not be drawn over the last tail as the snake is growing in size
    in this case, no updates should be made to variables related to the tail

Snake movement cases:

case 1: snake moving in straight line with no obstacles in front

    - the head position is updated
    - the last tail position is updated
    - the last tail position is set to 0 in the array
    - perform collision check
    - the head position is set to true in the array
    - the new tail is updated based on the deque
    - the new head is pushed onto the deque
    - the background is drawn over the last tail
    - the head is drawn

case 2: snake following its own tail

    - the head position is updated
    - the last tail position is updated
    - the last tail position is set to 0 in the array
    - perform collision check
    - the head position is set to true in the array
    - the new tail is updated based on the deque
    - the new head is pushed onto the deque
    - the background is drawn over the last tail
    - the head is drawn

case 3: snake eats an apple

    - the head position is updated
    - perform collision check (not actually necessary as in the future the apple will not be able to spawn in the snake)
    - perform check if head position overlaps with apple
    - if so, do not update tail positions, otherwise, proceed as normal
        - if TRUE:
            - increase score
            - set is_eaten to true 
        - if FALSE:     
            - the last tail position is updated
            - the last tail position is set to 0 in the array
    - the head position is set to true in the array
    - the new tail is NOT updated (based on the deque)
    - the new head is pushed onto the deque
    - the background is NOT drawn over the last tail
    - the head is drawn
    - the apple is redrawn and is_eaten is set to false

case 4: snake collides with itself

case 5: snake eats apple and follows snake?

case 6: snake goes beyond border